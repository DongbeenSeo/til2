{"version":3,"file":"static/webpack/static/development/pages/index.js.f32dbd069356d04a3e40.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react';\nimport { Button, Form, Input, Card, Icon, Avatar } from 'antd';\n\nconst dummy = {\n  isLogin: true,\n  images: [],\n  posts: [\n    {\n      User: {\n        id: 1,\n        nickname: 'dongbeen',\n        content: 'first content',\n      },\n    },\n  ],\n};\n\nconst Home = () => {\n  return (\n    <>\n      {dummy.isLogin && (\n        <Form encType=\"multipart/form-data\">\n          <Input.TextArea maxLength={140} placeholder=\"please input content\" />\n          <div>\n            <Input type=\"file\" multiple hidden />\n            <Button>이미지 업로드</Button>\n            <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">\n              생성\n            </Button>\n          </div>\n          <div>\n            {dummy.images.map((value, index) => {\n              return (\n                <div key={index} style={{ display: 'inline-block' }}>\n                  <img src={value.path} alt={value} />\n                  <Button>제거</Button>\n                </div>\n              );\n            })}\n          </div>\n        </Form>\n      )}\n      {dummy.posts.map(p => (\n        <Card\n          key={p.createdAt}\n          actions={[\n            <Icon type={retweet} key={retweet} />,\n            <Icon type={heart} key={heart} />,\n            <Icon type={message} key={message} />,\n            <Icon type={ellipsis} key={ellipsis} />,\n          ]}>\n          <Card.Meta\n            avatar={<Avatar>{p.User.nickname[0]}</Avatar>}\n            title={c.User.nickname}\n            description={c.content}\n          />\n        </Card>\n      ))}\n    </>\n  );\n};\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AADA;AAJA;AACA;AAakBA;AACA;AACA;;;;A","sourceRoot":""}